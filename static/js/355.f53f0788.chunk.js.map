{"version":3,"file":"static/js/355.f53f0788.chunk.js","mappings":"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","sources":["api/API.js","webpack://card-pokemon/./src/components/PokemonList/PokemonList.module.scss?f381","webpack://card-pokemon/./src/components/Search/Search.module.scss?94fa","components/Search/Search.jsx","webpack://card-pokemon/./src/components/SearchListPokemon/SearchListPokemon.module.scss?f00b","components/SearchListPokemon/SearchListPokemon.jsx","utils/filterPokemonsByName.jsx","webpack://card-pokemon/./src/components/ListFilterType/ListFilterType.module.scss?cb3f","components/ListFilterType/ListFilterType.jsx","webpack://card-pokemon/./src/components/Container/Container.module.scss?9ade","components/Container/Container.jsx","webpack://card-pokemon/./src/components/Pokemon/Pokemon.module.scss?e7a4","components/Pokemon/Pokemon.jsx","components/PokemonList/PokemonList.jsx"],"sourcesContent":["const BASE_URL = 'https://pokeapi.co/api/v2';\r\n\r\nfunction fetchPokemon(pokemon) {\r\n  return fetch(`${BASE_URL}/pokemon/${pokemon}`).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Нет покемона с именем ${pokemon}`));\r\n  });\r\n}\r\n\r\nfunction fetchPokemonAll(offset, limit) {\r\n  return fetch(`${BASE_URL}/pokemon?offset=${offset}&limit=${limit}`).then(\r\n    response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nexport { fetchPokemon, fetchPokemonAll };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnMore\":\"PokemonList_btnMore__5WW6v\",\"section\":\"PokemonList_section__bWV8r\"};","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Search_box__wc8Gs\",\"box_label\":\"Search_box_label__Lx0ww\",\"box_input\":\"Search_box_input__EdPjD\"};","import s from './Search.module.scss';\r\nimport { useState } from 'react';\r\n\r\nfunction Search({ onChange }) {\r\n  const [name, setName] = useState('');\r\n\r\n  const handlerChange = evt => {\r\n    setName(evt.target.value.replace(/[^a-z\\d]/gi, ''));\r\n  };\r\n\r\n  onChange(name);\r\n\r\n  return (\r\n    <div className={s.box}>\r\n      <input\r\n        className={s.box_input}\r\n        name=\"name\"\r\n        onChange={handlerChange}\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        placeholder=\"Search pokemon\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Search;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"SearchListPokemon_box__KHnte\",\"box_list\":\"SearchListPokemon_box_list__LTLDt\",\"box_item\":\"SearchListPokemon_box_item__MNIST\",\"box_text\":\"SearchListPokemon_box_text__Wo3A+\"};","import s from './SearchListPokemon.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container } from '@mui/material';\r\n\r\nfunction SearchListPokemon({ arraySearch }) {\r\n  return (\r\n    <Container xs={12} sm={6} md={4}>\r\n      <div className={s.box}>\r\n        <ul className={s.box_list}>\r\n          {arraySearch.map(pokemon => (\r\n            <li key={pokemon.id} className={s.box_item}>\r\n              <Link to={pokemon.name.toLowerCase()}>\r\n                <span className={s.box_text}>{pokemon.name}</span>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SearchListPokemon;\r\n","function filterPokemonsByName(filterName) {\r\n  return pokemon => {\r\n    const lowerCasePokemonName = pokemon.name.toLowerCase();\r\n    const lowerCaseFilterName = filterName.toLowerCase();\r\n    return lowerCasePokemonName.includes(lowerCaseFilterName);\r\n  };\r\n}\r\nexport default filterPokemonsByName;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"listTypes\":\"ListFilterType_listTypes__dzF5K\",\"listTypes_button\":\"ListFilterType_listTypes_button__6EbAj\"};","import s from './ListFilterType.module.scss';\r\nimport { useEffect, useState } from 'react';\r\nimport { Container } from '@mui/material';\r\n\r\nfunction ListFilterType({ details, setDetails }) {\r\n  const [types, setTypes] = useState([]);\r\n\r\n  // ---------------FilterTypesPokemon------------- //\r\n  const filterType = type => {\r\n    const allPokemon = [...details];\r\n\r\n    if (details.length > 0) {\r\n      let listType = allPokemon.filter(pokemon =>\r\n        pokemon.types.some(som => som.type.name === type)\r\n      );\r\n\r\n      console.log(listType);\r\n      if (listType.length > 0) setDetails(listType);\r\n    }\r\n  };\r\n\r\n  // ---------------FetchTypesPokemon------------- //\r\n  useEffect(() => {\r\n    const getTypePokemon = async () => {\r\n      const data = await fetch('https://pokeapi.co/api/v2/type');\r\n      const response = await data.json();\r\n      setTypes(response.results);\r\n    };\r\n\r\n    getTypePokemon();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.listTypes}>\r\n      {types.length > 0 &&\r\n        types.map(pokemon => (\r\n          <button\r\n            className={`${s.listTypes_button} ${pokemon.name}`}\r\n            onClick={() => filterType(pokemon.name)}\r\n            key={pokemon.name}\r\n          >\r\n            {pokemon.name}\r\n          </button>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListFilterType;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__zDsrm\"};","import s from './Container.module.scss';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport { Container };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Pokemon_list__GuS2J\",\"list_title\":\"Pokemon_list_title__249y1\",\"list_item\":\"Pokemon_list_item__-R0x8\",\"list_img\":\"Pokemon_list_img__mMJTa\"};","import s from './Pokemon.module.scss';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst Pokemon = ({ pokemon }) => {\r\n  const picturePok = pokemon.sprites.other['official-artwork'].front_default;\r\n  const idPok = pokemon.game_indices[0]['game_index'];\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      <li className={`${s.list_item} ${s.color}`}>\r\n        <Link state={{ from: location }} to={pokemon.name}>\r\n          <h5 className={s.list_title}>\r\n            {pokemon.name} #{idPok}\r\n          </h5>\r\n\r\n          <img\r\n            className={s.list_img}\r\n            src={picturePok}\r\n            alt={pokemon.name}\r\n            loading=\"lazy\"\r\n          />\r\n\r\n          <span className={s.list_title}>Exp:{pokemon.base_experience}</span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport { Pokemon };\r\n","import s from './PokemonList.module.scss';\r\nimport Search from 'components/Search';\r\nimport pokemons from 'json-pokemon';\r\nimport SearchListPokemon from 'components/SearchListPokemon/SearchListPokemon';\r\nimport filterPokemonsByName from 'utils/filterPokemonsByName';\r\nimport ListFilterType from 'components/ListFilterType';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { fetchPokemonAll } from 'api/API';\r\nimport { Container } from 'components/Container/Container';\r\nimport { Pokemon } from 'components/Pokemon/Pokemon';\r\nimport { Button } from '@mui/material';\r\n\r\nfunction PokemonList() {\r\n  const [arraySearch, setArraySearch] = useState([]);\r\n  const [pokemon, setPokemons] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n  const [offset, setOffset] = useState(20);\r\n  const [limit, setLimint] = useState(80);\r\n  const [name, setName] = useState('');\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const getMorPokemon = async () => {\r\n        const data = await fetchPokemonAll(offset, limit);\r\n        setPokemons(data.results);\r\n\r\n        const createPokemonDetals = async pokemon => {\r\n          pokemon.map(async pokemon => {\r\n            const response = await fetch(pokemon.url);\r\n            const data = await response.json();\r\n\r\n            setDetails(prev => [...prev, data]);\r\n          });\r\n        };\r\n\r\n        createPokemonDetals(data.results);\r\n      };\r\n\r\n      getMorPokemon();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [limit, offset]);\r\n\r\n  // -----------------SearchByName---------------- //\r\n  useEffect(() => {\r\n    if (!name.trim()) return;\r\n\r\n    if (name) {\r\n      let filtePokemons = pokemons.filter(filterPokemonsByName(name));\r\n      setArraySearch(filtePokemons);\r\n    }\r\n  }, [name]);\r\n\r\n  // -----------------NextPage---------------- //\r\n  const nextPage = () => {\r\n    setOffset(limit + offset);\r\n    setLimint();\r\n  };\r\n\r\n  // -----------------HandlerSearchName---------------- //\r\n  const handlerSearchName = name => {\r\n    setName(name);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Search onChange={handlerSearchName} />\r\n        {details.length > 0 && (\r\n          <ListFilterType details={details} setDetails={setDetails} />\r\n        )}\r\n\r\n        {name.length >= 2 && arraySearch.length > 0 ? (\r\n          <SearchListPokemon arraySearch={arraySearch} />\r\n        ) : (\r\n          <>\r\n            {details.map((pokemon, i) => (\r\n              <Pokemon pokemon={pokemon} key={i} />\r\n            ))}\r\n\r\n            <div className={s.btnMore}>\r\n              <Button onClick={() => nextPage()}>Load More</Button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n"],"names":["BASE_URL","fetchPokemon","pokemon","fetch","then","response","ok","json","Promise","reject","Error","fetchPokemonAll","offset","limit","onChange","useState","name","setName","className","s","evt","target","value","replace","type","autoComplete","placeholder","arraySearch","Container","xs","sm","md","map","to","toLowerCase","id","filterName","lowerCasePokemonName","lowerCaseFilterName","includes","details","setDetails","types","setTypes","useEffect","getTypePokemon","data","results","length","onClick","allPokemon","listType","filter","some","som","console","log","filterType","children","Pokemon","picturePok","sprites","other","front_default","idPok","game_indices","location","useLocation","state","from","src","alt","loading","base_experience","setArraySearch","setPokemons","setOffset","setLimint","getMorPokemon","createPokemonDetals","url","prev","error","trim","filtePokemons","pokemons","filterPokemonsByName","i","Button"],"sourceRoot":""}
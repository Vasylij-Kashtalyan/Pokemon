{"version":3,"file":"static/js/256.90a667d8.chunk.js","mappings":"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","sources":["api/API.js","webpack://card-pokemon/./src/components/PokemonPage/PokemoPage.module.scss?2648","webpack://card-pokemon/./src/components/BoxPage/BoxPage.module.scss?f1fe","components/BoxPage/BoxPage.jsx","components/PokemonPage/PokemonPage.jsx","components/PokemonListId/PokemonListId.jsx"],"sourcesContent":["const BASE_URL = 'https://pokeapi.co/api/v2';\r\n\r\nfunction fetchPokemon(name) {\r\n  return fetch(`${BASE_URL}/pokemon/${name}`).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Нет покемона с именем ${name}`));\r\n  });\r\n}\r\n\r\nfunction fetchPokemonAll(offset, limit) {\r\n  return fetch(`${BASE_URL}/pokemon?offset=${offset}&limit=${limit}`).then(\r\n    response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nexport { fetchPokemon, fetchPokemonAll };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"PokemoPage_box__eL2CS\",\"box_effect\":\"PokemoPage_box_effect__kO5Ar\",\"box_img\":\"PokemoPage_box_img__FDUWh\",\"box_text\":\"PokemoPage_box_text__i7f16\",\"list\":\"PokemoPage_list__gfGPg\",\"list_title\":\"PokemoPage_list_title__Y17q2\",\"list_item\":\"PokemoPage_list_item__z4sET\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"BoxPage_container__qC4qH\"};","import s from './BoxPage.module.scss';\r\n\r\nfunction BoxPage({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport { BoxPage };\r\n","import s from './PokemoPage.module.scss';\r\nimport { Button } from '@mui/material';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { BoxPage } from 'components/BoxPage/BoxPage';\r\n\r\nfunction PokemonPage({ pokemon, abilities }) {\r\n  const picturePok = pokemon.sprites.other['official-artwork'].front_default;\r\n  const typePok = pokemon.types[0].type.name;\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const goBack = () => {\r\n    if (location?.state?.from) {\r\n      const { pathname, search } = location?.state?.from;\r\n\r\n      return navigate(`${pathname}${search}`);\r\n    }\r\n    return navigate('/');\r\n  };\r\n\r\n  return (\r\n    pokemon && (\r\n      <BoxPage>\r\n        <Button onClick={goBack}>Back</Button>\r\n\r\n        <div className={s.box}>\r\n          {/* ------Picture----- */}\r\n          <img className={s.box_img} src={picturePok} alt={pokemon.name} />\r\n          <ul className={s.list}>\r\n            <h1 className={s.list_title}>{pokemon.name}</h1>\r\n\r\n            {/* ------Type----- */}\r\n            <li className={s.list_item}>Type: {typePok}</li>\r\n\r\n            {/* ------Stats----- */}\r\n            {pokemon.stats.map(entry => (\r\n              <li className={s.list_item} key={entry.stat.name}>\r\n                {entry.stat.name}: {entry.base_stat}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* ------Abilities----- */}\r\n        <div className={s.box_effect}>\r\n          <h2 className={s.list_title}>Abilities</h2>\r\n\r\n          <p>Effect</p>\r\n          <span className={s.box_text}>{abilities.effect}</span>\r\n\r\n          <p>Short Effect</p>\r\n          <span className={s.box_text}>{abilities.short_effect}</span>\r\n        </div>\r\n      </BoxPage>\r\n    )\r\n  );\r\n}\r\nexport { PokemonPage };\r\n","import { useParams } from 'react-router-dom';\r\nimport { fetchPokemon } from 'api/API';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { PokemonPage } from 'components/PokemonPage/PokemonPage';\r\n\r\nfunction PokemonListId(props) {\r\n  const [pokemon, setPokemons] = useState(null);\r\n  const [abilities, setAbilities] = useState([]);\r\n  const { name } = useParams();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const getPokemonId = async () => {\r\n        const data = await fetchPokemon(name);\r\n        setPokemons(data);\r\n\r\n        const getAbilities = async data => {\r\n          data.abilities.map(async ({ ability }) => {\r\n            const response = await fetch(ability.url);\r\n            const data = await response.json();\r\n\r\n            setAbilities(data.effect_entries['1']);\r\n          });\r\n        };\r\n\r\n        getAbilities(data);\r\n      };\r\n      getPokemonId();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [name]);\r\n\r\n  return pokemon && <PokemonPage pokemon={pokemon} abilities={abilities} />;\r\n}\r\nexport default PokemonListId;\r\n"],"names":["BASE_URL","fetchPokemon","name","fetch","then","response","ok","json","Promise","reject","Error","fetchPokemonAll","offset","limit","BoxPage","children","className","s","PokemonPage","pokemon","abilities","picturePok","sprites","other","front_default","typePok","types","type","location","useLocation","navigate","useNavigate","Button","onClick","state","from","pathname","search","src","alt","stats","map","entry","stat","base_stat","effect","short_effect","props","useState","setPokemons","setAbilities","useParams","useEffect","getPokemonId","data","getAbilities","ability","url","effect_entries","error","console","log"],"sourceRoot":""}